plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.5'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'com.epages.restdocs-api-spec' version '0.18.4'
	id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'com.project'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

	compileOnly 'org.projectlombok:lombok'

	runtimeOnly 'com.mysql:mysql-connector-j'

	annotationProcessor 'org.projectlombok:lombok'

	// excel
	implementation 'org.apache.poi:poi:5.2.3'
	implementation 'org.apache.poi:poi-ooxml:5.2.3'

	// jwt
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
	runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// restdocs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
	testImplementation 'com.epages:restdocs-api-spec-mockmvc:0.18.4'

	// swagger ui
	swaggerUI 'org.webjars:swagger-ui:4.11.1'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

swaggerSources {
	sample {
		setInputFile(file("build/api-spec/openapi3.yml"))
	}
}

openapi3 {
	servers = [
			{ url = "http://localhost:8080" }
	]
	title = '스터디링크 API'
	description = '스터디링크 API 명세서입니다.'
	version = '1.0.0'
	format = 'yml'
}

tasks.withType(GenerateSwaggerUI).configureEach {
	dependsOn 'openapi3'

	doFirst {
		def swaggerUIFile = file("build/api-spec/openapi3.yml")

		def securitySchemesContent =  "  securitySchemes:\n" +  \
                                      "    JWT:\n" +  \
                                      "      type: apiKey\n" +  \
                                      "      name: Authorization\n" +  \
                                      "      in: header\n" + \
                                      "security:\n" +
				"  - APIKey: []  # Apply the security scheme here"

		swaggerUIFile.append securitySchemesContent
	}
}

tasks.register('swaggerUI', Copy) {
	dependsOn 'generateSwaggerUISample'
	from("${generateSwaggerUISample.outputDir}")
	into("src/main/resources/static/docs")
}

bootJar() {
	dependsOn 'swaggerUI'
}